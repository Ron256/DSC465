) + scale_y_continuous(breaks=c(0.00, 0.02, 0.04, 0.06, 0.08, 0.10, 0.12, 0.14, 0.16, 0.18, 0.2, 0.22)) + coord_flip()
ggplot(perceptionExperiment, aes(x = factor(Test), y = absoluteError)) +
geom_col() +
theme(axis.text.x = element_text(face="bold",
color="#993333"
,  size=10
, angle=90
),
axis.text.y = element_text(face="bold",
color="#993333"
)
) + scale_y_continuous(breaks=c(0.02, 0.04, 0.06, 0.08, 0.10, 0.12, 0.14, 0.16, 0.18, 0.2, 0.22)) + coord_flip()
ggplot(perceptionExperiment, aes(x = factor(Test), y = absoluteError)) +
geom_col() +
theme(axis.text.x = element_text(#face="bold",
color="#993333"
,  size=10
, angle=90
),
axis.text.y = element_text(#face="bold",
color="#993333"
)
) + scale_y_continuous(breaks=c(0.02, 0.04, 0.06, 0.08, 0.10, 0.12, 0.14, 0.16, 0.18, 0.2, 0.22)) + coord_flip()
ggplot(perceptionExperiment, aes(x = factor(Test), y = absoluteError)) +
geom_col() + scale_y_continuous(breaks=c(0.02, 0.04, 0.06, 0.08, 0.10, 0.12, 0.14, 0.16, 0.18, 0.2, 0.22))  +
theme(axis.text.x = element_text(#face="bold",
color="#993333"
,  size=10
, angle=90
),
axis.text.y = element_text(#face="bold",
color="#993333"
)
) #+ coord_flip()
ggplot(perceptionExperiment, aes(x = factor(Test), y = absoluteError)) +
geom_col() + scale_y_continuous(limits = c(0, 0.22),breaks=seq(0, 0.22, by = 0.2))  +
theme(axis.text.x = element_text(#face="bold",
color="#993333"
,  size=10
, angle=90
),
axis.text.y = element_text(#face="bold",
color="#993333"
)
) #+ coord_flip()
library(ggplot2)
df <- iris
## all data, default breaks
ggplot(df, aes(Sepal.Length, Sepal.Width)) +
geom_point()
## subset of data is seen in plot, breaks changed
ggplot(df, aes(Sepal.Length, Sepal.Width)) +
geom_point() +
scale_x_continuous(breaks = c(5.5,6.5), limits = c(5,7)) +
scale_y_continuous(breaks = c(3.5,2.5), limits = c(2,4))
ggplot(perceptionExperiment, aes(x = factor(Test), y = absoluteError)) +
geom_col() + scale_y_continuous(breaks = c(0.0,0.22), limits = c(0.04,0.3))  +
theme(axis.text.x = element_text(#face="bold",
color="#993333"
,  size=10
, angle=90
),
axis.text.y = element_text(#face="bold",
color="#993333"
)
) #+ coord_flip()
ggplot(perceptionExperiment, aes(x = factor(Test), y = absoluteError)) +
geom_col() +
theme(axis.text.x = element_text(#face="bold",
color="#993333"
,  size=10
, angle=90
),
axis.text.y = element_text(#face="bold",
color="#993333"
)
) #+ coord_flip()
ggplot(perceptionExperiment, aes(x = factor(Test), y = absoluteError)) +
geom_col() +
theme(axis.text.x = element_text(#face="bold",
color="#993333"
,  size=10
, angle=90
),
axis.text.y = element_text(#face="bold",
color="#993333"
)
) + scale_y_continuous(breaks = c(0, 0.02, 0.04))
#+ coord_flip()
ggplot(perceptionExperiment, aes(x = factor(Test), y = absoluteError)) +
geom_col() +
theme(axis.text.x = element_text(#face="bold",
color="#993333"
,  size=10
, angle=90
),
axis.text.y = element_text(#face="bold",
color="#993333"
)
) + scale_y_continuous(breaks = c(0, 0.02, 0.04, 0.2))
#+ coord_flip()
setwd("C:/Users/rejalu1/OneDrive - Henry Ford Health System/DSC 465/HomeWork/HomeWork1")
intelstock <- read.csv(file = "../HomeWork1/datasets/Intel-1998.csv", sep = "," , header = TRUE )
library(plyr) # for data wrangling
library(dplyr)     # for data wrangling
library(tidyverse)
library(lubridate) # for dealing with dates
library(ggplot2)   # for dealing with visualization
perceptionExperiment <- read.csv(file = "../HomeWork1/datasets/PerceptionExperiment1.csv", sep = "," , header = TRUE )
perceptionExperiment <- perceptionExperiment %>%
mutate(error = Response - TrueValue,
absoluteError = abs(Response - TrueValue)
)
ggplot(perceptionExperiment, aes(x = factor(Test), y = absoluteError)) +
geom_col() +
theme(axis.text.x = element_text(#face="bold",
color="#993333"
,  size=10
, angle=90
),
axis.text.y = element_text(#face="bold",
color="#993333"
)
)# + scale_y_continuous(breaks = c(0, 0.02, 0.04, 0.2))
#+ coord_flip()
ggplot(perceptionExperiment, aes(x = factor(Test), y = absoluteError)) +
geom_col() +
theme(axis.text.x = element_text(#face="bold",
color="#993333"
,  size=10
, angle=90
),
axis.text.y = element_text(#face="bold",
color="#993333"
)
) + scale_y_continuous(labels = scales::demo_continuous())
ggplot(perceptionExperiment, aes(x = factor(Test), y = absoluteError)) +
geom_col() +
theme(axis.text.x = element_text(#face="bold",
color="#993333"
,  size=10
, angle=90
),
axis.text.y = element_text(#face="bold",
color="#993333"
)
) + scale_y_continuous(labels = scales::percent())
ggplot(perceptionExperiment, aes(x = factor(Test), y = absoluteError)) +
geom_col() +
theme(axis.text.x = element_text(#face="bold",
color="#993333"
,  size=10
, angle=90
),
axis.text.y = element_text(#face="bold",
color="#993333"
)
) + labs(x = "Test")
#+ coord_flip()
ggplot(perceptionExperiment, aes(x = factor(Test), y = absoluteError)) +
geom_col() +
theme(axis.text.x = element_text(#face="bold",
color="#993333"
,  size=10
, angle=90
),
axis.text.y = element_text(#face="bold",
color="#993333"
)
) + labs(x = "Test") + scale_y_continuous(labels = scales::percent)
#+ coord_flip()
ggplot(perceptionExperiment, aes(x = factor(Test), y = absoluteError)) +
geom_col() +
theme(axis.text.x = element_text(#face="bold",
color="#993333"
,  size=10
, angle=90
),
axis.text.y = element_text(#face="bold",
color="#993333"
)
) + labs(x = "Test") + scale_y_continuous(labels = scales::decimal)
ggplot(perceptionExperiment, aes(x = factor(Test), y = absoluteError)) +
geom_col() +
theme(axis.text.x = element_text(#face="bold",
color="#993333"
,  size=10
, angle=90
),
axis.text.y = element_text(#face="bold",
color="#993333"
)
) + labs(x = "Test") + scale_y_continuous(labels = scales::cscale())
ggplot(perceptionExperiment, aes(x = factor(Test), y = absoluteError)) +
geom_col() +
theme(axis.text.x = element_text(#face="bold",
color="#993333"
,  size=10
, angle=90
),
axis.text.y = element_text(#face="bold",
color="#993333"
)
) + labs(x = "Test") + scale_y_continuous(labels = scales::scale())
ggplot(perceptionExperiment, aes(x = factor(Test), y = absoluteError)) +
geom_col() +
theme(axis.text.x = element_text(#face="bold",
color="#993333"
,  size=10
, angle=90
),
axis.text.y = element_text(#face="bold",
color="#993333"
)
) + labs(x = "Test") + scale_y_log10()
#+ coord_flip()
ggplot(perceptionExperiment, aes(x = factor(Test), y = absoluteError)) +
geom_col() +
theme(axis.text.x = element_text(#face="bold",
color="#993333"
,  size=10
, angle=90
),
axis.text.y = element_text(#face="bold",
color="#993333"
)
) + labs(x = "Test")
ggplot(perceptionExperiment, aes(x = factor(Test), y = absoluteError)) +
geom_col() +
theme(axis.text.x = element_text(face="bold",
color="#993333"
,  size=10
, angle=90
),
axis.text.y = element_text(face="bold",
color="#993333"
)
) + labs(x = "Test")
ggplot(perceptionExperiment, aes(x = fct_reorder(factor(Test), absoluteError), y = absoluteError)) +
geom_col() +
theme(axis.text.x = element_text(face="bold",
color="#993333"
,  size=10
, angle=90
),
axis.text.y = element_text(face="bold",
color="#993333"
)
) + labs(x = "Test")
ggplot(perceptionExperiment, aes(x = fct_reorder(factor(Test), absoluteError), y = absoluteError)) +
geom_col() +
theme(axis.text.x = element_text(face="bold",
color="#993333"
,  size=10
, angle=90
),
axis.text.y = element_text(face="bold",
color="#993333"
)
) + labs(x = "Test", title = "Absolute Error Vs Test")
ggplot(perceptionExperiment, aes(x = fct_reorder(factor(Test), absoluteError), y = absoluteError)) +
geom_col() +
theme(axis.text.x = element_text(face="bold",
color="#993333"
,  size=10
, angle=90
),
axis.text.y = element_text(face="bold",
color="#993333"
)
) + labs(x = "Test", title = "Absolute Error Vs Test") + coord_flip()
ggplot(perceptionExperiment, aes(x = fct_reorder(factor(Test), absoluteError), y = absoluteError, fill=Test)) +
geom_col() +
theme(axis.text.x = element_text(face="bold",
color="#993333"
,  size=10
, angle=90
),
axis.text.y = element_text(face="bold",
color="#993333"
), legend.position = "none"
) + labs(x = "Test", title = "Absolute Error Vs Test") + coord_flip()
ggplot(perceptionExperiment, aes(x = fct_reorder(factor(Test), absoluteError), y = absoluteError, fill=Test)) +
geom_col(colour="black") +
theme(axis.text.x = element_text(face="bold",
color="#993333"
,  size=10
, angle=90
),
axis.text.y = element_text(face="bold",
color="#993333"
), legend.position = "none"
) + labs(x = "Test", title = "Absolute Error Vs Test") + coord_flip()
ggplot(perceptionExperiment, aes(x = fct_reorder(factor(Test), absoluteError), y = absoluteError, fill=Test)) +
geom_col() +
theme(axis.text.x = element_text(face="bold",
color="#993333"
,  size=10
, angle=90
),
axis.text.y = element_text(face="bold",
color="#993333"
), legend.position = "none"
) + labs(x = "Test", title = "Absolute Error Vs Test") + coord_flip()
ggplot(perceptionExperiment, aes(x = fct_reorder(factor(Test), absoluteError), y = absoluteError, fill=Test)) +
geom_col(colour = "blue") +
theme(axis.text.x = element_text(face="bold",
color="#993333"
,  size=10
, angle=90
),
axis.text.y = element_text(face="bold",
color="#993333"
), legend.position = "none"
) + labs(x = "Test", title = "Absolute Error Vs Test") + coord_flip()
ggplot(perceptiondf, aes(x = fct_reorder(Test, sd), y = sd, fill=Test)) +
geom_col(colour="black") +
theme(axis.text.x = element_text(face="bold",
color="#993333",
size=10,
angle=90),
axis.text.y = element_text(face="bold",
color="#993333"
), legend.position = "none"
) +
labs(y  = "Standard deviation of Error", x = "Test", title = "Standard deviation of the Error by Test")  +
coord_flip()
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
sdErrorbyTestdf <- perceptionExperiment %>%
select(Test = Test,
#TestNumber = TestNumber,
error = error
)
perceptiondf <- data_summary(sdErrorbyTestdf,
varname = "error",
groupnames = c("Test")
)
sdErrorbyTestdf <- perceptionExperiment %>%
select(Test = Test,
#TestNumber = TestNumber,
error = error
)
perceptiondf <- data_summary(sdErrorbyTestdf,
varname = "error",
groupnames = c("Test")
)
perceptionExperiment <- perceptionExperiment %>%
mutate(error = Response - TrueValue,
absoluteError = abs(Response - TrueValue)
)
df <- ToothGrowth
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
perceptiondf <- data_summary(sdErrorbyTestdf,
varname = "error",
groupnames = c("Test")
)
sdErrorbyTestdf <- perceptionExperiment %>%
select(Test = Test,
#TestNumber = TestNumber,
error = error
)
View(sdErrorbyTestdf)
perceptiondf <- data_summary(sdErrorbyTestdf,
varname = "error",
groupnames = c("Test")
)
perceptiondf <- data_summary(sdErrorbyTestdf,
varname = "error",
groupnames = c("Test")
)
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
perceptiondf <- data_summary(sdErrorbyTestdf,
varname = "error",
groupnames = c("Test")
)
sdErrorbyTestdf <- perceptionExperiment %>%
select(Test = Test,
#TestNumber = TestNumber,
error = error
)
perceptionExperiment <- read.csv(file = "../HomeWork1/datasets/PerceptionExperiment1.csv", sep = "," , header = TRUE )
perceptionExperiment <- perceptionExperiment %>%
mutate(error = Response - TrueValue,
absoluteError = abs(Response - TrueValue)
)
sdErrorbyTestdf <- perceptionExperiment %>%
select(Test = Test,
#TestNumber = TestNumber,
error = error
)
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
perceptiondf <- data_summary(sdErrorbyTestdf,
varname = "error",
groupnames = c("Test")
)
perceptionExperiment <- read.csv(file = "../HomeWork1/datasets/PerceptionExperiment1.csv", sep = "," , header = TRUE )
perceptionExperiment <- read.csv(file = "../HomeWork1/datasets/PerceptionExperiment1.csv", sep = "," , header = TRUE )
head(perceptionExperiment)
perceptionExperiment <- perceptionExperiment %>%
mutate(error = Response - TrueValue,
absoluteError = abs(Response - TrueValue)
)
ggplot(perceptionExperiment, aes(x=error)) +
geom_histogram(bins = 20) +
ggtitle("Histogram of daily stock volume") #+
#scale_x_continuous(labels = scales::comma)
sdErrorbyTestdf <- perceptionExperiment %>%
select(Test = Test,
#TestNumber = TestNumber,
error = error
)
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
perceptiondf <- data_summary(sdErrorbyTestdf,
varname = "error",
groupnames = c("Test")
)
View(sdErrorbyTestdf)
sdErrorbyTestdf <- perceptionExperiment %>%
select(Test = Test,
TestNumber = TestNumber,
error = error
)
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
perceptiondf <- data_summary(sdErrorbyTestdf,
varname = "error",
groupnames = c("Test")
)
View(perceptionExperiment)
sdErrorbyTestdf <- perceptionExperiment %>%
select(Test = Test,
TestNumber = TestNumber,
error = error
)
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
perceptiondf <- data_summary(sdErrorbyTestdf,
varname = "error",
groupnames = c("Test")
)
perceptiondf <- data_summary(sdErrorbyTestdf,
varname = "error",
groupnames = c("Test")
)
